1) test_with_capitilize_middle
skYpro
ОР Принимает на вход текст, делает первую букву заглавной и возвращает этот же текст=SkYpro
ФР Помимо первой буквы измененной на заглавную меняет регистр у остальных заглавные буквы в слове делая их строчными=Skypro

2) test_with_list_to_string_numbers
(пока тест промаркирован @pytest.mark.xfail) точно ли этот "Пример" актуален, если в докстирнге указан `delimeter` -
разделитель строк. По умолчанию запятая (",")
add extra comas to the very symbol (expected only delimiter to be changed)
test_with_list_to_string_numbers - AssertionError: assert '[, 1, ,, 2, ,, 3, ,, 4, ]' == '1, 2, 3, 4'

3) test_with_contains_true_false
скорее как улучшение, а не дефект, т.к. не противоречит логике описанной в докстринге
"s"
"Возвращает `True`, если строка содержит искомый символ и `False` - если нет \n
        Пример 1: `contains("SkyPro", "S") -> True`"
(test_with_contains_true_false)
False != True
в тесте видно, что функция чуствительна к регистру и в случае указания верного символа, но неверного регистра - тест падает

4) то же, что и для 3 пункта test_starts_with_true_false, нельзя назвать дефектом, но возможно рассмотреть как улучшение (прим. функция на входе приравнивает вводимый символ до определенного регистра, тогда не будет возникать ошибки)
ОР важен символ, а не его регистр
ФР регистр не важен (функция обрабатывает этот момент), главное какой символ указан

5) test_end_with_true_false
так же, как и для 3 и 4 пунктов test_end_with_true_false больше улучшение, чем дефект
